created: 20220316050856513
creator: Shuang
modified: 20220316054317758
modifier: Shuang
title: 进程控制 - 相关系统调用
tmap.id: 26dfc909-727a-48ca-9d27-f6d0721ea728
type: text/vnd.tiddlywiki

* - fork	创建一个新进程
* - clone	按指定条件创建子进程
* - execve	运行可执行文件
* - exit	中止进程
* - vfork创建一个子进程，以供执行新程序，常与execve等同时使用

---
以linux为例：  

从 Linux 内核的角度来看，并没有把线程和进程区别对待。
    
    函数`pthread()`可以新建一个线程。
    **但无论线程还是进程，都是用`task_struct`结构表示的，唯一的区别就是共享的数据区域不同**。
    
    在Linux中每一个进程都是由task_struct结构体来实现的，轻量级进程也就是我们所说的线程它也是一个task_struct结构体实现，当一个程序运行时，操作系用会给这个进程分进程虚拟地址空间，而一个进程中可能存在多个线程来完成不同的事情，把线程的task_struct加载到一个双端队列上从而让CPU去进行调度。
    
    换句话说，线程看起来跟进程没有区别，只是线程的某些数据区域和其父进程是共享的，而子进程是拷贝副本，而不是共享。就比如说，`mm`结构和`files`结构在线程中都是共享的，我画两张图你就明白了：
    
    
- 父进程子进程 （是进程）